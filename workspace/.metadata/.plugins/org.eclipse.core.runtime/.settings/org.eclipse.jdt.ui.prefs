content_assist_disabled_computers=org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.pde.api.tools.ui.apitools_proposal_category\u0000
content_assist_favorite_static_members=org.junit.Assert.*;org.junit.Assume.*;org.junit.jupiter.api.Assertions.*;org.junit.jupiter.api.Assumptions.*;org.junit.jupiter.api.DynamicContainer.*;org.junit.jupiter.api.DynamicTest.*;org.assertj.core.api.Assertions.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*;org.springframework.security.test.web.servlet.response.SecurityMockMvcResultMatchers.*;org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*;org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*;org.springframework.test.web.client.match.MockRestRequestMatchers.*;org.springframework.test.web.client.response.MockRestResponseCreators.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;org.hamcrest.CoreMatchers.*
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="com.adelsoncouto.api.domain.Colaborador"><rhs name\="com.adelsoncouto.api.domain.Colaborador"/></lhs><lhs name\="com.fasterxml.jackson.core.Versioned"><rhs name\="com.fasterxml.jackson.databind.ObjectMapper"/></lhs><lhs name\="com.fasterxml.jackson.core.ObjectCodec"><rhs name\="com.fasterxml.jackson.databind.ObjectMapper"/></lhs><lhs name\="com.fasterxml.jackson.core.TreeCodec"><rhs name\="com.fasterxml.jackson.databind.ObjectMapper"/></lhs><lhs name\="com.fasterxml.jackson.databind.ObjectMapper"><rhs name\="com.fasterxml.jackson.databind.ObjectMapper"/></lhs><lhs name\="java.lang.Enum"><rhs name\="com.adelsoncouto.api.domain.Sexo"/><rhs name\="com.adelsoncouto.api.domain.TipoColaborador"/><rhs name\="java.math.RoundingMode"/><rhs name\="com.globalweb.api.domains.MarcacaoOrigem"/></lhs><lhs name\="com.adelsoncouto.api.domain.Sexo"><rhs name\="com.adelsoncouto.api.domain.Sexo"/></lhs><lhs name\="java.time.temporal.Temporal"><rhs name\="java.time.LocalDate"/><rhs name\="java.time.LocalDateTime"/><rhs name\="java.time.ZonedDateTime"/></lhs><lhs name\="java.time.temporal.TemporalAccessor"><rhs name\="java.time.LocalDate"/><rhs name\="java.time.LocalDateTime"/><rhs name\="java.time.ZonedDateTime"/></lhs><lhs name\="java.time.temporal.TemporalAdjuster"><rhs name\="java.time.LocalDate"/><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.time.chrono.ChronoLocalDate"><rhs name\="java.time.LocalDate"/></lhs><lhs name\="com.adelsoncouto.api.domain.TipoColaborador"><rhs name\="com.adelsoncouto.api.domain.TipoColaborador"/></lhs><lhs name\="java.lang.Number"><rhs name\="java.math.BigDecimal"/></lhs><lhs name\="java.math.BigDecimal"><rhs name\="java.math.BigDecimal"/></lhs><lhs name\="java.time.chrono.ChronoZonedDateTime"><rhs name\="java.time.ZonedDateTime"/></lhs><lhs name\="com.globalweb.api.domains.MarcacaoOrigem"><rhs name\="com.globalweb.api.domains.MarcacaoOrigem"/></lhs><lhs name\="java.time.chrono.ChronoLocalDateTime"><rhs name\="java.time.LocalDateTime"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.Date"/></lhs><lhs name\="java.util.Date"><rhs name\="java.util.Date"/></lhs></history>
content_assist_number_of_computers=15
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
formatter_profile=_Java Conventions [adelson]
formatter_settings_version=15
hoverModifierMasks=org.eclipse.jdt.ui.BestMatchHover;0;org.eclipse.jdt.internal.debug.ui.JavaDebugHover;0;org.springframework.boot.ide.java.servers.hoverprovider;0;org.eclipse.jdt.ui.ProblemHover;0;org.eclipse.jdt.ui.NLSStringHover;327680;org.eclipse.jdt.ui.JavadocHover;393216;org.eclipse.jdt.ui.AnnotationHover;0;org.eclipse.jdt.ui.JavaSourceHover;131072;
hoverModifiers=org.eclipse.jdt.ui.BestMatchHover;0;org.eclipse.jdt.internal.debug.ui.JavaDebugHover;\!0;org.springframework.boot.ide.java.servers.hoverprovider;\!0;org.eclipse.jdt.ui.ProblemHover;\!0;org.eclipse.jdt.ui.NLSStringHover;Ctrl+Alt;org.eclipse.jdt.ui.JavadocHover;Ctrl+Shift;org.eclipse.jdt.ui.AnnotationHover;\!0;org.eclipse.jdt.ui.JavaSourceHover;Shift;
org.eclipse.jdt.ui.exception.name=e
org.eclipse.jdt.ui.formatterprofiles=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<profiles version\="15">\n    <profile kind\="CodeFormatterProfile" name\="Java Conventions [adelson]" version\="15">\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_ellipsis" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_after_imports" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_javadoc_comments" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indentation.size" value\="2"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.align_with_spaces" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.disabling_tag" value\="@formatter\:off"/>\n        <setting id\="org.eclipse.jdt.core.formatter.continuation_indentation" value\="2"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_enum_constants" value\="17"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_imports" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_after_package" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_binary_operator" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.indent_root_tags" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.enabling_tag" value\="@formatter\:on"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_statements_compare_to_block" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.line_length" value\="80"/>\n        <setting id\="org.eclipse.jdt.core.formatter.use_on_off_tags" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_method_body_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_method_declaration" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_binary_expression" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_block" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_lambda_body" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.compact_else_if" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_type_parameters" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_compact_loops" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_binary_operator" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_unary_operator" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_ellipsis" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_line_comments" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.align_type_members_on_columns" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_assignment" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_module_statements" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_conditional_expression" value\="80"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_block_in_case" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_header" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_method_declaration" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.join_wrapped_lines" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_conditional_operator" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines" value\="2147483647"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_resources_in_try" value\="80"/>\n        <setting id\="org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_code_block_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.tabulation.size" value\="2"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_source_code" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_field" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer" value\="2"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_method" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_assignment_operator" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_switch" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_html" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_compact_if" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line" value\="one_line_never"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_empty_lines" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_type_arguments" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_unary_operator" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_label" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_member_type" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.format_block_comments" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_statements_compare_to_body" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_multiple_fields" value\="16"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_array_initializer" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_before_binary_operator" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration" value\="common_lines"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line" value\="one_line_preserve"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_enum_constant" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.brace_position_for_type_declaration" value\="end_of_line"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_package" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header" value\="0"/>\n        <setting id\="org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.join_lines_in_comments" value\="true"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional" value\="insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.comment.indent_parameter_description" value\="false"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.tabulation.char" value\="mixed"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.blank_lines_between_import_groups" value\="1"/>\n        <setting id\="org.eclipse.jdt.core.formatter.lineSplit" value\="120"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation" value\="do not insert"/>\n        <setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch" value\="insert"/>\n    </profile>\n</profiles>\n
org.eclipse.jdt.ui.formatterprofiles.version=15
org.eclipse.jdt.ui.gettersetter.use.is=true
org.eclipse.jdt.ui.ignorelowercasenames=true
org.eclipse.jdt.ui.importorder=java;javax;org;com;
org.eclipse.jdt.ui.ondemandthreshold=99
org.eclipse.jdt.ui.overrideannotation=true
org.eclipse.jdt.ui.staticondemandthreshold=99
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="setterbody_context" deleted\="false" description\="Code in created setters" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.setterbody" name\="setterbody">${field} \= ${param};</template></templates>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new top level Shell with event loop" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.mainloop" name\="mainloop">${displayType\:newType(org.eclipse.swt.widgets.Display)} ${display\:newName(org.eclipse.swt.widgets.Display)} \= new ${displayType}();\n${shellType\:newType(org.eclipse.swt.widgets.Shell)} ${shell\:newName(org.eclipse.swt.widgets.Shell)} \= new ${shellType}(${display});\n${shell}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\n\n${cursor}\n\n${shell}.pack();\n${shell}.open();\nwhile (\!${shell}.isDisposed()) {\n\tif (\!${display}.readAndDispatch ()) \n\t\t${display}.sleep();\n}\n${display}.dispose();</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="execute a runnable in the UI thread" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.execute" name\="execute">${display\:var(org.eclipse.swt.widgets.Display)}.${kind\:link(syncExec, asyncExec)}(new ${runnable\:newType(java.lang.Runnable)}(){\n\tpublic void run(){\n\t\t${cursor}\n\t}\n});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="add a listener to a Widget " enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.addlistener" name\="addlistener">${control\:var(org.eclipse.swt.widgets.Widget)}.addListener(${type\:link(\n\tSWT.Activate,\n\tSWT.Arm,\n\tSWT.Close,\n\tSWT.Collapse,\n\tSWT.Deactivate,\n\tSWT.DefaultSelection,\n\tSWT.Deiconify,\n\tSWT.Dispose,\n\tSWT.DragDetect,\n\tSWT.EraseItem,\n\tSWT.Expand,\n\tSWT.FocusIn,\n\tSWT.FocusOut,\n\tSWT.HardKeyDown,\n\tSWT.HardKeyUp,\n\tSWT.Help,\n\tSWT.Hide,\n\tSWT.Iconify,\n\tSWT.ImeComposition,\n\tSWT.KeyDown,\n\tSWT.KeyUp,\n\tSWT.MeasureItem,\n\tSWT.MenuDetect,\n\tSWT.Modify,\n\tSWT.MouseDoubleClick,\n\tSWT.MouseDown,\n\tSWT.MouseEnter,\n\tSWT.MouseExit,\n\tSWT.MouseHover,\n\tSWT.MouseMove,\n\tSWT.MouseUp,\n\tSWT.MouseWheel,\n\tSWT.Move,\n\tSWT.Paint,\n\tSWT.PaintItem,\n\tSWT.Resize,\n\tSWT.Selection,\n\tSWT.SetData,\n\tSWT.Settings,\n\tSWT.Show,\n\tSWT.Traverse,\n\tSWT.Verify)}, new ${listener\:newType(org.eclipse.swt.widgets.Listener)}(){\n\tpublic void handleEvent(${event\:newType(org.eclipse.swt.widgets.Event)} e) {\n\t\t${imp\:import(org.eclipse.swt.SWT)}${cursor}\t\t\t\t\n\t}\n});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new GridLayout for a Composites" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.gridlayout" name\="GridLayout">${gridLayout\:newType(org.eclipse.swt.layout.GridLayout)} ${layout\:newName(org.eclipse.swt.layout.GridLayout)} \= new ${gridLayout}(${columns\:link(1, 2, 3, 4, 5)}, ${width\:link(false, true)});\n${layout}.marginWidth \= ${marginW\:link(5, 0)};\n${layout}.marginHeight \= ${marginH\:link(5, 0)};\n${layout}.verticalSpacing \= ${vSpacing\:link(0, 5)};\n${layout}.horizontalSpacing \= ${hSpacing\:link(0, 5)};\n${parent\:var(org.eclipse.swt.widgets.Composite)}.setLayout(${layout});\n${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new GridData for a Control" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.griddata" name\="GridData">${gridData\:newType(org.eclipse.swt.layout.GridData)} ${layoutData\:newName(org.eclipse.swt.layout.GridData)} \= new ${gridData}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(false, true)});\n${layoutData}.widthHint\= ${width\:link(SWT.DEFAULT)};\n${layoutData}.heightHint\= ${height\:link(SWT.DEFAULT)};\n${parent\:var(org.eclipse.swt.widgets.Control)}.setLayoutData(${layoutData});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="using GridDataFactory for a Control" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.griddatafactory" name\="GridDataFactory">GridDataFactory.fillDefaults().grab(true, false).applyTo(${parent\:var(org.eclipse.swt.widgets.Control)});\n${imp\:import(org.eclipse.jface.layout.GridDataFactory)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Label" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.label" name\="Label">${labelType\:newType(org.eclipse.swt.widgets.Label)} ${label\:newName(org.eclipse.swt.widgets.Label)}\= new ${labelType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.WRAP, 'SWT.SEPARATOR | SWT.HORIZONTAL', 'SWT.SEPARATOR | SWT.VERTICAL')});\n${label}.setLayoutData(new ${type\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\n${label}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Image" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.image" name\="Image">${labelType\:newType(org.eclipse.swt.widgets.Label)} ${image\:newName(org.eclipse.swt.widgets.Label)}\= new ${labelType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.BORDER)});\n${image}.setLayoutData(new ${type\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\n${image}.setImage(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Button" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.button" name\="Button">${buttonType\:newType(org.eclipse.swt.widgets.Button)} ${button\:newName(org.eclipse.swt.widgets.Button)}\= new ${buttonType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.PUSH, SWT.TOGGLE, SWT.RADIO, SWT.CHECK, SWT.FLAT)});\n${button}.setLayoutData(new ${type\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\n${button}.setText(${word_selection}${});\n${button}.addSelectionListener(new SelectionAdapter() {\n\t\t\t@Override\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\t${listener\:link('')}\n\t\t\t}\n\t\t});\n${imp\:import(org.eclipse.swt.SWT, org.eclipse.swt.events.SelectionAdapter, org.eclipse.swt.events.SelectionEvent)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Link" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.link" name\="Link">${linkType\:newType(org.eclipse.swt.widgets.Link)} ${link\:newName(org.eclipse.swt.widgets.Link)}\= new ${linkType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, SWT.NONE);\n${link}.setLayoutData(new ${type\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\n${link}.setText(${word_selection}${});\n${link}.addSelectionListener(new SelectionAdapter() {\n\t\t\t@Override\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\n\t\t\t\t${listener\:link('')}\n\t\t\t}\n\t\t});\n${imp\:import(org.eclipse.swt.SWT, org.eclipse.swt.events.SelectionAdapter, org.eclipse.swt.events.SelectionEvent)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Combo" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.combo" name\="Combo">${comboType\:newType(org.eclipse.swt.widgets.Combo)} ${combo\:newName(org.eclipse.swt.widgets.Combo)}\= new ${comboType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.DROP_DOWN, 'SWT.DROP_DOWN | SWT.READ_ONLY')});\n${combo}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(true, false)}, ${vex\:link(false, true)}));\n${combo}.setItems(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Scale" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.scale" name\="Scale">${scaleType\:newType(org.eclipse.swt.widgets.Scale)} ${scale\:newName(org.eclipse.swt.widgets.Scale)}\= new ${scaleType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.HORIZONTAL, SWT.VERTICAL)});\n${scale}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, FILL, CENTER, END)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\n${scale}.setMaximum(${max\:link(100)});\n${scale}.setIncrement(${inc\:link(5)});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Spinner" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.spinner" name\="Spinner">${spinnerType\:newType(org.eclipse.swt.widgets.Spinner)} ${spinner\:newName(org.eclipse.swt.widgets.Spinner)}\= new ${spinnerType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.BORDER, 'SWT.WRAP | SWT.BORDER', 'SWT.READ_ONLY | SWT.BORDER', 'SWT.READ_ONLY | SWT.WRAP | SWT.BORDER', SWT.WRAP, SWT.READ_ONLY)});\n${spinner}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(BEGINNING, CENTER, END, FILL)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(false, true)}, ${vex\:link(false, true)}));\n${spinner}.setMaximum(${max\:link(10)});\n${spinner}.setIncrement(${inc\:link(1)});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Browser" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.browser" name\="Browser">${browserType\:newType(org.eclipse.swt.browser.Browser)} ${browser\:newName(org.eclipse.swt.browser.Browser)}\= new ${browserType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.WEBKIT)});\n${browser}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${browser}.setUrl(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new DateTime" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.datetime" name\="DateTime">${dateType\:newType(org.eclipse.swt.widgets.DateTime)} ${dateTime\:newName(org.eclipse.swt.widgets.DateTime)}\= new ${dateType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.CALENDAR | SWT.SHORT', 'SWT.CALENDAR | SWT.MEDIUM', 'SWT.CALENDAR | SWT.LONG', 'SWT.TIME | SWT.SHORT', 'SWT.TIME | SWT.MEDIUM', 'SWT.TIME | SWT.LONG', 'SWT.DATE | SWT.SHORT', 'SWT.DATE | SWT.MEDIUM', 'SWT.DATE | SWT.LONG')});\n${dateTime}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Shell" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.shell" name\="Shell">${shellType\:newType(org.eclipse.swt.widgets.Shell)} ${shell\:newName(org.eclipse.swt.widgets.Shell)} \= new ${shellType}(${parent\:var(org.eclipse.swt.widgets.Shell)}, ${style\:link('SWT.DIALOG_TRIM | SWT.PRIMARY_MODAL', 'SWT.DIALOG_TRIM | SWT.MODELESS', 'SWT.SHELL_TRIM | SWT.MODELESS', 'SWT.SHELL_TRIM | SWT.PRIMARY_MODAL')});\n${shell}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\n\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\n\n${shell}.pack();\n\n${shell}.open();</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Composite with GridLayout" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.gridcomposite" name\="Composite">${compositeType\:newType(org.eclipse.swt.widgets.Composite)} ${composite\:newName(org.eclipse.swt.widgets.Composite)}\= new ${compositeType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.BORDER)});\n${composite}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${composite}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ScrolledComposite" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.scrolledcomposite" name\="ScrolledComposite">${compositeType\:newType(org.eclipse.swt.custom.ScrolledComposite)} ${scrolled\:newName(org.eclipse.swt.custom.ScrolledComposite)} \= new ${compositeType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.H_SCROLL | SWT.V_SCROLL', SWT.H_SCROLL, SWT.V_SCROLL)});\n${scrolled}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${scrolled}.setExpandVertical(${exV\:link(false, true)});\n${scrolled}.setExpandHorizontal(${exH\:link(false, true)});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\n\n${scrolled}.setContent(${content});\nPoint ${contentSize\:newName(org.eclipse.swt.graphics.Point)} \= ${content}.computeSize(SWT.DEFAULT, SWT.DEFAULT);\n${content}.setSize(${contentSize});\n${scrolled}.setMinSize(${contentSize});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Group with GridLayout" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.group" name\="Group">${groupType\:newType(org.eclipse.swt.widgets.Group)} ${group\:newName(org.eclipse.swt.widgets.Group)}\= new ${groupType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.SHADOW_ETCHED_IN, SWT.SHADOW_ETCHED_OUT, SWT.SHADOW_IN, SWT.SHADOW_OUT, SWT.SHADOW_NONE)});\n${group}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(false, true)}));\n${group}.setLayout(new ${layoutType\:newType(org.eclipse.swt.layout.GridLayout)}(${numberColumns\:link(1, 2, 3, 4, 5)}, ${equalColumns\:link(false, true)}));\n${group}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new SashForm" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.sashform" name\="SashForm">${type\:newType(org.eclipse.swt.custom.SashForm)} ${sash\:newName(org.eclipse.swt.custom.SashForm)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.HORIZONTAL, SWT.VERTICAL)});\n${sash}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\n\n${sash}.setWeights(new int[] {1, 1});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ExpandBar" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.expandbar" name\="ExpandBar">${type\:newType(org.eclipse.swt.widgets.ExpandBar)} ${bar\:newName(org.eclipse.swt.widgets.ExpandBar)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.V_SCROLL, SWT.NONE)});\n${bar}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ExpandItem for an ExpandBar" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.expanditem" name\="ExpandItem">${type\:newType(org.eclipse.swt.widgets.ExpandItem)} ${item\:newName(org.eclipse.swt.widgets.ExpandItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.ExpandBar)}, SWT.NONE);\n${item}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\n\n${item}.setControl(${control});\n${item}.setHeight(${control}.computeSize(SWT.DEFAULT, SWT.DEFAULT).y);</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TabFolder" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tabfolder" name\="TabFolder">${type\:newType(org.eclipse.swt.widgets.TabFolder)} ${folder\:newName(org.eclipse.swt.widgets.TabFolder)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.TOP, SWT.BOTTOM)});\n${folder}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TabItem for a TabFolder" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tabitem" name\="TabItem">${type\:newType(org.eclipse.swt.widgets.TabItem)} ${item\:newName(org.eclipse.swt.widgets.TabItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.TabFolder)}, SWT.NONE);\n${item}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\n\n${item}.setControl(${control});</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ToolBar" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.toolbar" name\="ToolBar">${type\:newType(org.eclipse.swt.widgets.ToolBar)} ${bar\:newName(org.eclipse.swt.widgets.ToolBar)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.FLAT, SWT.WRAP, SWT.RIGHT, SWT.HORIZONTAL, SWT.VERTICAL, SWT.SHADOW_OUT)});\n${bar}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new ToolItem for a ToolBar" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.toolitem" name\="ToolItem">${type\:newType(org.eclipse.swt.widgets.ToolItem)} ${item\:newName(org.eclipse.swt.widgets.ToolItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.ToolBar)}, ${style\:link(SWT.PUSH, SWT.CHECK, SWT.RADIO, SWT.SEPARATOR, SWT.DROP_DOWN)});\n${item}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Text" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.text" name\="Text">${type\:newType(org.eclipse.swt.widgets.Text)} ${text\:newName(org.eclipse.swt.widgets.Text)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.SINGLE | SWT.LEAD | SWT.BORDER', 'SWT.SINGLE | SWT.LEAD | SWT.READ_ONLY | SWT.BORDER', 'SWT.SINGLE | SWT.LEAD | SWT.PASSWORD | SWT.BORDER', 'SWT.MULTI | SWT.WRAP | SWT.V_SCROLL | SWT.BORDER', 'SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER')});\n${text}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(CENTER, TOP, BOTTOM, FILL)}, ${hex\:link(true, false)}, ${vex\:link(false, true)}));\n${text}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new StyledText " enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.styledtext" name\="StyledText">${type\:newType(org.eclipse.swt.custom.StyledText)} ${text\:newName(org.eclipse.swt.custom.StyledText)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.V_SCROLL | SWT.H_SCROLL | SWT.READ_ONLY', 'SWT.WRAP | SWT.V_SCROLL', SWT.NONE, SWT.BORDER, SWT.FULL_SELECTION)});\n${text}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${text}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new StyleRange for a StyledText" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.stylerange" name\="StyleRange">${type\:newType(org.eclipse.swt.custom.StyleRange)} ${range\:newName(org.eclipse.swt.custom.StyleRange)}\= new ${type}();\n${range}.start\= ${start\:link(0)};\n${range}.length\= ${length\:link(0)};\n${range}.foreground\= ${fColor\:link(null, 'Display.getDefault().getSystemColor(SWT.COLOR_BLACK)', 'Display.getDefault().getSystemColor(SWT.COLOR_WHITE)', 'Display.getDefault().getSystemColor(SWT.COLOR_RED)', 'Display.getDefault().getSystemColor(SWT.COLOR_BLUE)', 'Display.getDefault().getSystemColor(SWT.COLOR_GREEN)')};\n${range}.background\= ${bColor\:link(null, 'Display.getDefault().getSystemColor(SWT.COLOR_BLACK)', 'Display.getDefault().getSystemColor(SWT.COLOR_WHITE)', 'Display.getDefault().getSystemColor(SWT.COLOR_RED)', 'Display.getDefault().getSystemColor(SWT.COLOR_BLUE)', 'Display.getDefault().getSystemColor(SWT.COLOR_GREEN)')};\n${range}.fontStyle\= ${fStyle\:link(SWT.NORMAL, SWT.ITALIC, SWT.BOLD)};\n${text\:var(org.eclipse.swt.custom.StyledText)}.setStyleRange(${range});\n${imp\:import(org.eclipse.swt.SWT, org.eclipse.swt.widgets.Display)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new List" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.list" name\="List">${type\:newType(org.eclipse.swt.widgets.List)} ${list\:newName(org.eclipse.swt.widgets.List)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.MULTI | SWT.V_SCROLL', SWT.MULTI, 'SWT.SINGLE | SWT.V_SCROLL | SWT.H_SCROLL', 'SWT.SINGLE | SWT.V_SCROLL', SWT.SINGLE)});\n${list}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${list}.setItems(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Table" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.table" name\="Table">${type\:newType(org.eclipse.swt.widgets.Table)} ${table\:newName(org.eclipse.swt.widgets.Table)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.SINGLE | SWT.FULL_SELECTION', 'SWT.MULTI | SWT.FULL_SELECTION', SWT.CHECK, SWT.NONE, SWT.VIRTUAL)});\n${table}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${table}.setLinesVisible(${line\:link(true, false)});\n${table}.setHeaderVisible(${header\:link(true, false)});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\n\nfor (int ${index} \= 0; ${index} &lt; ${table}.getColumnCount(); ${index}++) {\n\t${table}.getColumn(${index}).pack();\n}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TableColumn for a Table " enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tablecolumn" name\="TableColumn">${type\:newType(org.eclipse.swt.widgets.TableColumn)} ${column\:newName(org.eclipse.swt.widgets.TableColumn)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Table)}, ${style\:link(SWT.LEAD, SWT.CENTER, SWT.TRAIL)});\n${column}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TableItem for a Table" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tableitem" name\="TableItem">${type\:newType(org.eclipse.swt.widgets.TableItem)} ${item\:newName(org.eclipse.swt.widgets.TableItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Table)}, SWT.NONE);\n${item}.setText(${count\:link(0, 1, 2, 3, 4, 5)}, ${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Tree" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.tree" name\="Tree">${type\:newType(org.eclipse.swt.widgets.Tree)} ${tree\:newName(org.eclipse.swt.widgets.Tree)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link('SWT.SINGLE | SWT.FULL_SELECTION', 'SWT.MULTI | SWT.FULL_SELECTION', SWT.CHECK, SWT.NONE, SWT.VIRTUAL)});\n${tree}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${tree}.setLinesVisible(${line\:link(true, false)});\n${tree}.setHeaderVisible(${header\:link(true, false)});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}\n\nfor (int ${index} \= 0; ${index} &lt; ${tree}.getColumnCount(); ${index}++) {\n\t${tree}.getColumn(${index}).pack();\n}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TreeColumn for a Tree " enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.treecolumn" name\="TreeColumn">${type\:newType(org.eclipse.swt.widgets.TreeColumn)} ${column\:newName(org.eclipse.swt.widgets.TreeColumn)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Tree)}, ${style\:link(SWT.LEAD, SWT.CENTER, SWT.TRAIL)});\n${column}.setText(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new TreeItem for a Tree" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.treeitem" name\="TreeItem">${type\:newType(org.eclipse.swt.widgets.TreeItem)} ${item\:newName(org.eclipse.swt.widgets.TreeItem)}\= new ${type}(${parent\:var(org.eclipse.swt.widgets.Tree, org.eclipse.swt.widgets.TreeItem)}, SWT.NONE);\n${item}.setText(${count\:link(0, 1, 2, 3, 4, 5)}, ${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="Spring Boot main method" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.main" name\="main">\npublic static void main(String[] args) throws Exception {\n        SpringApplication.run(${enclosing_type}.class, args);\n}${\:import(org.springframework.boot.SpringApplication)}\n</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="Declare a @Rule ExpectedException field [test]" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.expectedexception.decl" name\="eerule">\n${\:import(org.junit.Rule,org.junit.rules.ExpectedException)}\n@Rule\nExpectedException thrown \= ExpectedException.none();\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="Add an Exception to an ExpectedException rule [test]" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.expectedexception.use" name\="eerule">\n${thrown\:field(org.junit.rules.ExpectedException)}.expect(${Exception}.class);\n${thrown\:field(org.junit.rules.ExpectedException)}.expectMessage("${cursor}");\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="Assert that a variable is not null, using Spring's Assert class. Context restriction\: [\!test]" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.assert.notNull.Spring" name\="notnull">\nAssert.notNull(${name\:var}, "${name} must not be null");${\:import(org.springframework.util.Assert)}\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="Assert that a variable is not null, using JUnit's Assert class. Context restriction\: [test][\!assertj]" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.assert.notNull.JUnit" name\="notnull">\nAssert.assertNotNull("${name\:var} must not be null", ${name});${\:import(org.junit.Assert)}\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="Assert that a variable is not null, using AssertJ. Context restriction\: [test][assertj]" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.assert.notNull.AssertJ" name\="notnull">\nassertThat(${name\:var}).isNotNull();${\:importStatic('org.assertj.core.api.Assertions.*')} \t\n</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="JUnit MockMvc with WebApplicationContext setup" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.jumockmvcwac" name\="jumockmvcwac">\n${standardImports\:import(org.junit.Before,org.springframework.beans.factory.annotation.Autowired,org.springframework.test.web.servlet.MockMvc,org.springframework.test.web.servlet.setup.MockMvcBuilders,org.springframework.web.context.WebApplicationContext)}\n${\:importStatic('org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*','org.springframework.test.web.servlet.result.MockMvcResultHandlers.*','org.springframework.test.web.servlet.result.MockMvcResultMatchers.*')}\n\n    @Autowired\n    WebApplicationContext context;\n    \n    MockMvc mockMvc;\n    \n    @Before\n    public void setup() {\n        mockMvc \= MockMvcBuilders\n                .webAppContextSetup(context)\n                .build();\n    }\n</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="static Logger field using slf4j" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.slf4j.logger" name\="logger">\n${\:import(org.slf4j.Logger,org.slf4j.LoggerFactory)}\nprivate static final Logger ${log} \= LoggerFactory.getLogger(${enclosing_type}.class);\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="log an INFO message using slf4jlogger declared in this class" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.slf4j.loginfo" name\="logi">\n    ${log\:field(org.slf4j.Logger)}.info("${message}");\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="log an ERROR message using slf4jlogger declared in this class" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.slf4j.logerror" name\="loge">\n    ${log\:field(org.slf4j.Logger)}.error("${message}", ${exception\:var(java.lang.Throwable)});\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="log a WARNING using slf4jlogger declared in this class" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.slf4j.logwarn" name\="logw">\n    ${log\:field(org.slf4j.Logger)}.warn("${warning}");\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="log an DEBUG message using slf4jlogger declared in this class" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.slf4j.logdebug" name\="logd">\n    ${log\:field(org.slf4j.Logger)}.debug("${message}");\n</template><template autoinsert\="true" context\="boot-statements" deleted\="false" description\="Call restTemplate.exchange" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.rtexchange" name\="rtex">\n${\:import(org.springframework.core.ParameterizedTypeReference,org.springframework.hateoas.PagedResources,org.springframework.http.HttpEntity,org.springframework.http.HttpMethod,org.springframework.http.ResponseEntity)}\nResponseEntity&lt;PagedResources&lt;?&gt;&gt; result \= ${restTemplate\:var(org.springframework.web.client.RestTemplate)}.exchange("", \n     HttpMethod.GET, \n     new HttpEntity&lt;Void&gt;((Void) null),\n     new ParameterizedTypeReference&lt;PagedResources&lt;${cursor}&gt;&gt;() {});\n</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="RequestMapping method" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.RequestMapping" name\="RequestMapping method">${x\:import(org.springframework.web.bind.annotation.RequestMapping, org.springframework.web.bind.annotation.RequestMethod, org.springframework.web.bind.annotation.RequestParam)}@RequestMapping(value\="${path}", method\=RequestMethod.${GET})\npublic ${SomeData} ${requestMethodName}(@RequestParam ${String} ${param}) {\n\treturn new ${SomeData}(${cursor});\n}\n</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="GetMapping method" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.GetMapping" name\="GetMapping method">${x\:import(org.springframework.web.bind.annotation.GetMapping, org.springframework.web.bind.annotation.RequestParam)}@GetMapping(value\="${path}")\npublic ${SomeData} ${getMethodName}(@RequestParam ${String} ${param}) {\n\treturn new ${SomeData}(${cursor});\n}\n</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="PostMapping method" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.PostMapping" name\="PostMapping method">${x\:import(org.springframework.web.bind.annotation.PostMapping, org.springframework.web.bind.annotation.RequestBody)}@PostMapping(value\="${path}")\npublic ${SomeEnityData} ${postMethodName}(@RequestBody ${SomeEnityData} ${entity}) {\n\t//TODO\: process POST request\n\t${cursor}\n\treturn ${entity};\n}\n</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="PutMapping method" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.PutMapping" name\="PutMapping method">${x\:import(org.springframework.web.bind.annotation.PutMapping, org.springframework.web.bind.annotation.RequestBody, org.springframework.web.bind.annotation.PathVariable)}@PutMapping(value\="${path}/{${id}}")\npublic ${SomeEnityData} ${putMethodName}(@PathVariable ${pvt\:link(String,int,long)} ${id}, @RequestBody ${SomeEnityData} ${entity}) {\n\t//TODO\: process PUT request\n\t${cursor}\n\treturn ${entity};\n}\n</template><template autoinsert\="true" context\="boot-members" deleted\="false" description\="DeleteMapping method" enabled\="false" id\="org.springframework.ide.eclipse.boot.templates.DeleteMapping" name\="DeleteMapping method">${x\:import(org.springframework.web.bind.annotation.DeleteMapping, org.springframework.web.bind.annotation.PathVariable)}@DeleteMapping(value\="${path}/{${id}}")\npublic ${r\:link(String)} ${deleteMethodName}(@PathVariable ${pv\:link(String,int,long)} ${id}) {\n\t//TODO\: process DELETE request\n\t${cursor}\n\treturn "${Success}";\n}\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Respository para spring-boot" enabled\="true" name\="sbRepository">@Repository\npublic interface ${primary_type_name} extends JpaRepository&lt;${entity}, Integer&gt; {\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Resource para spring-boot (controller api)" enabled\="true" name\="sbResource">@RestController\n@RequestMapping(value \= "/${rota}")\npublic class ${primary_type_name} {\n\n  @Value(value \= "$${api.url.externa}")\n  private String urlExterna;\n\n\t@Autowired\n\tprivate ${entity}Service service${entity};\n\n\t@ApiOperation("Busca por ID")\n\t@RequestMapping(value \= "/{aId}", method \= RequestMethod.GET)\n\tpublic ResponseEntity&lt;${entity}&gt; findById(@PathVariable Integer aId) {\n\t\treturn ResponseEntity.ok().body(service${entity}.findById(aId));\n\t}\n\n\t@ApiOperation("Busca paginada")\n\t@RequestMapping(method \= RequestMethod.GET)\n\tpublic ResponseEntity&lt;Page&lt;${entity}&gt;&gt; findAll(\n\t    @RequestParam(value \= "page", defaultValue \= "0") Integer aPage,\n\t    @RequestParam(value \= "linesPerPage", defaultValue \= "24") Integer aLinesPerPage,\n\t    @RequestParam(value \= "orderBy", defaultValue \= "id") String aOrderBy,\n\t    @RequestParam(value \= "direction", defaultValue \= "ASC") String aDirection) {\n\t\tPage&lt;${entity}&gt; list \= service${entity}.findAll(aPage, aLinesPerPage, aOrderBy, aDirection);\n\t\treturn ResponseEntity.ok().body(list);\n\t}\n\n\t@ApiOperation("Salva")\n\t@RequestMapping(method \= RequestMethod.POST)\n\tpublic ResponseEntity&lt;Void&gt; save(@Valid @RequestBody ${entity}DTO aEntityDTO) {\n\t\t${entity} aEntity \= service${entity}.save(aEntityDTO);\n\t\tURI uri \= ServletUriComponentsBuilder.fromHttpUrl(urlExterna).path("/{id}").buildAndExpand(aEntity.getId()).toUri();\n\t\treturn ResponseEntity.created(uri).build();\n\t}\n\t\n\t@ApiOperation("Atualiza")\n\t@RequestMapping(value \= "/{aId}",method \= RequestMethod.PUT)\n\tpublic ResponseEntity&lt;Void&gt; update(@PathVariable Integer aId, @Valid @RequestBody ${entity}DTO aEntityDTO) {\n\t\tservice${entity}.update(aId, aEntityDTO);\n\t  return ResponseEntity.noContent().build();\n\t}\n\t\n\t@ApiOperation("Deleta")\n\t@RequestMapping(value \= "/{aId}", method \= RequestMethod.DELETE)\n\tpublic ResponseEntity&lt;Void&gt; delete(@PathVariable Integer aId) {\n\t\tservice${entity}.deleteById(aId);\n\t\treturn ResponseEntity.noContent().build();\n\t}\n}\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbPostResource">\t@ApiOperation("Salva")\n\t@RequestMapping(method \= RequestMethod.POST)\n\tpublic ResponseEntity&lt;Void&gt; save(@Valid @RequestBody ${entidade} aObj) {\n\t\tservice${entidade}.save(aObj);\n\t\tURI uri \= ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(1).toUri();\n\t\treturn ResponseEntity.created(uri).build();\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbEnum">@JsonFormat(shape \= JsonFormat.Shape.OBJECT)\npublic enum ${primary_type_name} {\n\n\t${name}(${code}, "${descricao}")${cursor};\n\n\tprivate Integer id;\n\tprivate String descricao;\n\n\tprivate ${primary_type_name}(Integer aId, String aDescricao) {\n\t\tthis.id \= aId;\n\t\tthis.descricao \= aDescricao;\n\t}\n\n\tpublic Integer getId() {\n\t\treturn this.id;\n\t}\n\n\tpublic String getDescricao() {\n\t\treturn this.descricao;\n\t}\n\n\tpublic String getName() {\n\t\treturn this.name();\n\t}\n\n\tpublic static ${primary_type_name} toEnum(Integer aId) {\n\t\tif (aId \=\= null) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (${primary_type_name} x \: ${primary_type_name}.values()) {\n\t\t\tif (aId.equals(x.getId())) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t\tthrow new IllegalArgumentException("Id inv\u00E1lido\: " + aId);\n\t}\n\n\tpublic static ${primary_type_name} toEnum(String aName) {\n\t\tif (aName \=\= null) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (${primary_type_name} x \: ${primary_type_name}.values()) {\n\t\t\tif (aName.equals(x.name())) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t}\n\t\tthrow new IllegalArgumentException("Name inv\u00E1lido\: " + aName);\n\t}\n\t\n\tpublic static List&lt;${primary_type_name}&gt; toList(){\n\t\treturn Arrays.asList(${primary_type_name}.values());\n\t}\n\n}\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="service para spring-boot para entity normal, em caso de enum use sbEnumService" enabled\="true" name\="sbService">@Service\npublic class ${primary_type_name} {\n\n\t@Autowired\n\tprivate ${entity}Repository repository${entity};\n\n\tpublic ${entity} findById(Integer aId) {\n\t\treturn repository${entity}.findById(aId).orElseThrow(() -&gt; new ObjectNotFoundException(aId.toString()));\n\t}\n\n\tpublic ${entity} save(${entity}DTO aDTO) {\n    ${entity} entity \= fromDTO(null, aDTO);\n\t\tentity \= repository${entity}.save(entity);\n\t\treturn entity;\n\t}\n\t\n\tpublic ${entity} update(Integer aId, ${entity}DTO aDTO) {\n    repository${entity}.findById(aId).orElseThrow(() -&gt; new ObjectNotFoundException(aId.toString()));\n\t\t${entity} entity \= fromDTO(aId, aDTO);\n\t\tentity \= repository${entity}.save(entity);\n\t\treturn entity;\n\t}\n\t\n\tpublic void deleteById(Integer aId) {\n\t\t${entity} entity \= repository${entity}.findById(aId).orElse(null);\n\t\tif(entity \!\= null) {\n\t\t\trepository${entity}.deleteById(entity.getId());\n\t\t}\n\t}\n\n\tpublic Page&lt;${entity}&gt; findAll(Integer aPage, Integer aLinesPerPage, String aOrderBy, String aDirection) {\n\t\tPageRequest pageRequest \= PageRequest.of(aPage, aLinesPerPage, Direction.valueOf(aDirection), aOrderBy);\n\t\treturn repository${entity}.findAll(pageRequest);\n\t}\n\n\tpublic ${entity} fromDTO(Integer aId, ${entity}DTO aDTO) {\n    ${entity} entity \= new ${entity}();\n\t\t//TODO implementar o parse ${entity}DTO para ${entity}\n\t\treturn entity;\n\t}\n\n\tpublic ${entity}DTO toDTO(${entity} aEntity) {\n    ${entity}DTO dto \= new ${entity}DTO();\n\t\t//TODO implementar o parse ${entity} para ${entity}DTO\n\t\treturn dto;\n\t}\n\n\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="domain para spring-boot" enabled\="true" name\="sbDomain">@Entity(name \= "${table}")\npublic class ${primary_type_name} implements Serializable {\n\n\tprivate static final long serialVersionUID \= 1L;\n\n\t@Id\n\t@GeneratedValue(strategy \= GenerationType.IDENTITY)\n\tprivate Integer id;\n\t\n  public ${primary_type_name}(){\n  }\n\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime \= 31;\n\t\tint result \= 1;\n\t\tresult \= prime * result + ((id \=\= null) ? 0 \: id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object a${primary_type_name}) {\n\t\tif (this \=\= a${primary_type_name})\n\t\t\treturn true;\n\t\tif (a${primary_type_name} \=\= null)\n\t\t\treturn false;\n\t\tif (getClass() \!\= a${primary_type_name}.getClass())\n\t\t\treturn false;\n\t\t${primary_type_name} other \= (${primary_type_name}) a${primary_type_name};\n\t\tif (id \=\= null) {\n\t\t\tif (other.id \!\= null)\n\t\t\t\treturn false;\n\t\t} else if (\!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n}\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbAutowiredRepository">\t@Autowired\n\tprivate ${entity}Repository repository${entity};</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbAutowiredService">\t@Autowired\n\tprivate ${entity}Service service${entity};</template><template autoinsert\="true" context\="java" deleted\="false" description\="Service para enum spring-boot" enabled\="true" name\="sbEnumService">@Service\npublic class ${primary_type_name} {\n\n\tpublic ${entity} findById(Integer aId) {\n\t\treturn ${entity}.toEnum(aId);\n\t}\n\n\tpublic ${entity} save(${entity} aEntity) {\n\t\treturn aEntity;\n\t}\n\n\tpublic ${entity} update(${entity} aEntity) {\n\t\treturn aEntity;\n\t}\n\n\tpublic void deleteById(Integer aId) {\n\t}\n\n\tpublic Page&lt;${entity}&gt; findAll(Integer aPage, Integer aLinesPerPage, String aOrderBy, String aDirection) {\n\t\tPageRequest pageRequest \= PageRequest.of(aPage, aLinesPerPage, Direction.valueOf(aDirection), aOrderBy);\n\t\tPageImpl&lt;${entity}&gt; list \= new PageImpl&lt;${entity}&gt;(${entity}.toList(), pageRequest, aLinesPerPage);\n\t\treturn list;\n\t}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Key para enum" enabled\="true" name\="sbEnumKey">${name}(${code}, "${descricao}")${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Propriedade, Get e Set" enabled\="true" name\="propriedade">private ${tipo} ${propriedade}${cursor};\n\n${line_selection}\n\npublic ${tipo} get${Propriedade}(){\n\treturn this.${propriedade};\n}\n\npublic void set${Propriedade}(${tipo} a${Propriedade}){\n\tthis.${propriedade} \= a${Propriedade};\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="parse string para zoned date time iso" enabled\="true" name\="zonedDateTimeIsoFromString">ZonedDateTime.parse(${word_selection}, BR.DATE_TIME_ISO)${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Formata zoned date time para string ISO" enabled\="true" name\="zonedDateTimeToString">${word_selection}.format(BR.DATE_TIME_ISO)${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Formatacoes BR" enabled\="true" name\="sbBR">\nimport java.time.ZoneId;\nimport java.time.ZonedDateTime;\nimport java.time.format.DateTimeFormatter;\n\nimport javax.persistence.AttributeConverter;\n\npublic class ${primary_type_name} implements AttributeConverter&lt;ZonedDateTime, String&gt;{\n\n\tpublic static final DateTimeFormatter TIME \= DateTimeFormatter.ofPattern("HH\:mm\:ss");\n\tpublic static final DateTimeFormatter DATE \= DateTimeFormatter.ofPattern("yyyy-MM-dd");\n\tpublic static final DateTimeFormatter DATE_BR \= DateTimeFormatter.ofPattern("dd/MM/yyyy");\n\tpublic static final DateTimeFormatter DATE_TIME \= DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH\:mm\:ss");\n\tpublic static final DateTimeFormatter DATE_TIME_ISO \= DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH\:mm\:ssXXX");\n\tpublic static final ZoneId ZONE_BRASILIA \= ZoneId.of("America/Sao_Paulo");\n\t\n\t@Override\n\tpublic String convertToDatabaseColumn(ZonedDateTime aData) {\n\t\treturn aData.format(BR.DATE_TIME_ISO);\n\t}\n\n\t@Override\n\tpublic ZonedDateTime convertToEntityAttribute(String aData) {\n\t\treturn ZonedDateTime.parse(aData);\n\t}\n}\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbEnumElementCollection">@ElementCollection(targetClass \= ${clazz_enum}.class, fetch \= FetchType.EAGER)\n@JoinTable(name \= "${primary_type_name}Has${clazz_enum}", joinColumns \= @JoinColumn(name \= "${primary_type_name}Id"))\n@Column(name \= "${clazz_enum}Name", nullable\=false)\n@Enumerated(EnumType.STRING)\nprivate final Set&lt;${clazz_enum}&gt; list${clazz_enum} \= new HashSet&lt;${clazz_enum}&gt;();</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbGetSet">${sbGetSet}${cursor}&\#13;\n&\#13;\npublic ${type} get${Name}(){&\#13;\n  return this.${field};&\#13;\n}&\#13;\n&\#13;\npublic ${enclosing_type} set${Name}(${type} a${Name}){&\#13;\n  this.${field} \= a${Name};&\#13;\n  return this;&\#13;\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="teste">${container\:var(java.util.List, 'java.lang.Object[]')}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbGetAdd">${sbGetAdd}${cursor}&\#13;\n&\#13;\npublic List&lt;${type}&gt; get${Name}(){&\#13;\n\treturn this.${field};&\#13;\n}&\#13;\n&\#13;\npublic ${enclosing_type} set${Name}(List&lt;${type}&gt; a${Name}){&\#13;\n\tthis.${field} \= a${Name};&\#13;\n  return this;&\#13;\n}&\#13;\n&\#13;\npublic ${enclosing_type} add${Name}(${type} a${Name}){&\#13;\n\tthis.get${Name}().add(a${Name});&\#13;\n  return this;&\#13;\n}&\#13;\n&\#13;\npublic ${enclosing_type} addAll${Name}(List&lt;${type}&gt; aList${Name}){&\#13;\n\tthis.get${Name}().addAll(aList${Name});&\#13;\n  return this;&\#13;\n}&\#13;\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbGetSetToZonedDateTime">${sbGetSet}${cursor}&\#13;\n&\#13;\npublic ${type} get${Name}(){&\#13;\n  return this.${field};&\#13;\n}&\#13;\n&\#13;\npublic ${enclosing_type} set${Name}(${type} a${Name}){&\#13;\n  this.${field} \= a${Name};&\#13;\n  return this;&\#13;\n}&\#13;\n&\#13;\npublic ${enclosing_type} ${field}FromZonedDateTime(ZonedDateTime aHora){&\#13;\n  this.${field} \= aHora.format(BR.DATE_TIME_ISO);&\#13;\n  return this;&\#13;\n}&\#13;\n&\#13;\npublic ZonedDateTime ${field}ToZonedDateTime(){&\#13;\n  return ZonedDateTime.parse(this.${field}, BR.DATE_TIME_ISO);&\#13;\n}&\#13;\n&\#13;\n\t\t</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbRepositoryFindAll">  @Transactional(readOnly \= true)\n\t@Query(\n      nativeQuery \= true, \n      value \= "SELECT * FROM ${table} ${condicoes}",\n\t    countQuery \= "SELECT COUNT(1) FROM ${table} ${condicoes}")\n\tPage&lt;${entity}&gt; findByPage(Pageable aPageable${cursor});</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbBase64">  @Basic(fetch \= FetchType.LAZY)\n\t@Column(length \= Integer.MAX_VALUE)\n\tprivate byte[] ${base64};</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbTempo">  @JsonFormat(shape \= JsonFormat.Shape.STRING, pattern \= "yyyy-MM-dd'T'HH\:mm\:ssXXX", timezone \= "America/Sao_Paulo")\n\t@javax.persistence.Convert(converter\=BR.class)\n\t@Column(columnDefinition\="varchar(30)")\n\tprivate ZonedDateTime ${hora};</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="sbHelper">\nimport java.lang.reflect.InvocationTargetException;\nimport java.util.Arrays;\nimport java.util.Set;\nimport java.util.stream.Collectors;\n\npublic class Helper {\n\n\tpublic static &lt;T&gt; T fromTo(Object aFrom, Class&lt;T&gt; aTo) throws InstantiationException, IllegalAccessException,\n\t    IllegalArgumentException, InvocationTargetException, NoSuchMethodException, SecurityException {\n\n\t\t// crio a inst\u00E2ncia\n\t\tT to \= aTo.getConstructor().newInstance();\n\n\t\t// classes\n\t\tClass&lt;? extends Object&gt; f \= aFrom.getClass();\n\t\tClass&lt;? extends Object&gt; t \= to.getClass();\n\n\t\t// methods\n\t\tSet&lt;String&gt; fmethods \= Arrays.asList(aFrom.getClass().getDeclaredMethods())\n\t\t    .stream().map(x -&gt; new String(x.getName())).collect(Collectors.toSet());\n\n\t\tSet&lt;String&gt; tmethods \= Arrays.asList(to.getClass().getDeclaredMethods())\n\t\t    .stream().map(x -&gt; new String(x.getName())).collect(Collectors.toSet());\n\n\t\tfor (String m \: fmethods) {\n\n\t\t\tif (m.matches("^get[A-Z].*$$")) {\n\n\t\t\t\t// \u00E9 um get\n\t\t\t\t\n\t\t\t\t//set equivalente\n\t\t\t\tString set \= m.replaceAll("^get(.*)$$", "set$$1");\n\n\t\t\t\tif (tmethods.contains(set)) {\n\n\t\t\t\t\t// tem um set\n\n\t\t\t\t\t// tipo parametro\n\t\t\t\t\tClass&lt;?&gt; type \= aFrom.getClass().getMethod(m).getReturnType();\n\n\t\t\t\t\t// passo o valor\n\t\t\t\t\tt.getDeclaredMethod(set, type).invoke(to, f.getMethod(m).invoke(aFrom));\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn to;\n\t}\n\n  private static int calculate(final String str, final int[] weight) {\n\t\tint sum \= 0;\n\t\tfor (int i \= str.length() - 1, digit; i &gt;\= 0; i--) {\n\t\t\tdigit \= Integer.parseInt(str.substring(i, i + 1));\n\t\t\tsum +\= digit * weight[weight.length - str.length() + i];\n\t\t}\n\t\tsum \= 11 - sum % 11;\n\t\treturn sum &gt; 9 ? 0 \: sum;\n\t}\n\n\t/**\n\t * Valida CPF\n\t *\n\t * @param ssn\n\t * @return\n\t */\n\tpublic static boolean isValidCPF(final String ssn) {\n\t\tif ((ssn \=\= null) || (ssn.length() \!\= 11) || ssn.matches(ssn.charAt(0) + "{11}"))\n\t\t\treturn false;\n\t\tint[] weightSsn \= {\n\t\t    11, 10, 9, 8, 7, 6, 5, 4, 3, 2\n\t\t};\n\t\tfinal Integer digit1 \= calculate(ssn.substring(0, 9), weightSsn);\n\t\tfinal Integer digit2 \= calculate(ssn.substring(0, 9) + digit1, weightSsn);\n\t\treturn ssn.equals(ssn.substring(0, 9) + digit1.toString() + digit2.toString());\n\t}\n\n\t/**\n\t * Valida CNPJ\n\t *\n\t * @param tin\n\t * @return\n\t */\n\tpublic static boolean isValidCNPJ(final String tin) {\n\t\tif ((tin \=\= null) || (tin.length() \!\= 14) || tin.matches(tin.charAt(0) + "{14}"))\n\t\t\treturn false;\n\t\tint[] weightTin \= {\n\t\t    6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2\n\t\t};\n\t\tfinal Integer digit1 \= calculate(tin.substring(0, 12), weightTin);\n\t\tfinal Integer digit2 \= calculate(tin.substring(0, 12) + digit1, weightTin);\n\t\treturn tin.equals(tin.substring(0, 12) + digit1.toString() + digit2.toString());\n\t}\n\n}\n</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jdt.ui.visibility.order=B,V,R,D,
outlinesortoption=T,SF,SI,SM,F,I,C,M,
sourceHoverBackgroundColor=255,255,225
sp_cleanup.add_default_serial_version_id=true
sp_cleanup.add_generated_serial_version_id=false
sp_cleanup.add_missing_annotations=true
sp_cleanup.add_missing_deprecated_annotations=true
sp_cleanup.add_missing_methods=false
sp_cleanup.add_missing_nls_tags=false
sp_cleanup.add_missing_override_annotations=true
sp_cleanup.add_missing_override_annotations_interface_methods=true
sp_cleanup.add_serial_version_id=false
sp_cleanup.always_use_blocks=true
sp_cleanup.always_use_parentheses_in_expressions=false
sp_cleanup.always_use_this_for_non_static_field_access=false
sp_cleanup.always_use_this_for_non_static_method_access=false
sp_cleanup.convert_functional_interfaces=false
sp_cleanup.convert_to_enhanced_for_loop=false
sp_cleanup.correct_indentation=false
sp_cleanup.format_source_code=false
sp_cleanup.format_source_code_changes_only=false
sp_cleanup.insert_inferred_type_arguments=false
sp_cleanup.make_local_variable_final=true
sp_cleanup.make_parameters_final=false
sp_cleanup.make_private_fields_final=true
sp_cleanup.make_type_abstract_if_missing_method=false
sp_cleanup.make_variable_declarations_final=false
sp_cleanup.never_use_blocks=false
sp_cleanup.never_use_parentheses_in_expressions=true
sp_cleanup.on_save_use_additional_actions=false
sp_cleanup.organize_imports=true
sp_cleanup.qualify_static_field_accesses_with_declaring_class=false
sp_cleanup.qualify_static_member_accesses_through_instances_with_declaring_class=true
sp_cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class=true
sp_cleanup.qualify_static_member_accesses_with_declaring_class=false
sp_cleanup.qualify_static_method_accesses_with_declaring_class=false
sp_cleanup.remove_private_constructors=true
sp_cleanup.remove_redundant_modifiers=false
sp_cleanup.remove_redundant_semicolons=false
sp_cleanup.remove_redundant_type_arguments=false
sp_cleanup.remove_trailing_whitespaces=false
sp_cleanup.remove_trailing_whitespaces_all=true
sp_cleanup.remove_trailing_whitespaces_ignore_empty=false
sp_cleanup.remove_unnecessary_casts=true
sp_cleanup.remove_unnecessary_nls_tags=false
sp_cleanup.remove_unused_imports=false
sp_cleanup.remove_unused_local_variables=false
sp_cleanup.remove_unused_private_fields=true
sp_cleanup.remove_unused_private_members=false
sp_cleanup.remove_unused_private_methods=true
sp_cleanup.remove_unused_private_types=true
sp_cleanup.sort_members=false
sp_cleanup.sort_members_all=false
sp_cleanup.use_anonymous_class_creation=false
sp_cleanup.use_blocks=false
sp_cleanup.use_blocks_only_for_return_and_throw=false
sp_cleanup.use_lambda=true
sp_cleanup.use_parentheses_in_expressions=false
sp_cleanup.use_this_for_non_static_field_access=false
sp_cleanup.use_this_for_non_static_field_access_only_if_necessary=true
sp_cleanup.use_this_for_non_static_method_access=false
sp_cleanup.use_this_for_non_static_method_access_only_if_necessary=true
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
